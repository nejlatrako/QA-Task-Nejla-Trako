{
	"info": {
		"_postman_id": "275ad24a-bbbd-4f04-9a1b-2f7db3aed678",
		"name": "NejlaTrako-API-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40276654"
	},
	"item": [
		{
			"name": "LoginTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check if the response contains a token\r",
							"pm.test(\"Response contains token\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"});\r",
							"\r",
							"// Save the token for future requests\r",
							"const jsonData = pm.response.json();\r",
							"pm.environment.set(\"authToken\", jsonData.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"nejlatrako0808@gmail.com\",\r\n  \"password\": \"nejla080801\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/login",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginTest-fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate status code is 401 for invalid login\r",
							"pm.test(\"Status code is 401 for invalid login\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"nejlaaa.test@gmail.com\",\r\n  \"password\": \"password123123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/login",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "SignUpTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the status code is 201 (Created)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Nejla\",\r\n    \"lastName\": \"Trako\",\r\n    \"email\": \"nejla.trako.test33@gmail.com\",\r\n    \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "SignUpTest-fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate response status\r",
							"pm.test(\"Status code is 400 for invalid registration\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json().errors;\r",
							"\r",
							"pm.test(\"Invalid email and short password errors\", function () {\r",
							"    pm.expect(jsonData.email.message).to.include(\"Email is invalid\");\r",
							"    pm.expect(jsonData.password.message).to.include(\"Path `password` (`123`) is shorter than the minimum allowed length (7)\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Nejla\",\r\n    \"lastName\": \"Trako\",\r\n    \"email\": \"nejlatrako.com\",\r\n    \"password\": \"123\" // Invalid email and short password[min is 7]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contact List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check if the response is an array\r",
							"pm.test(\"Response is an array of contacts\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"// Validate the structure of the first contact (if the list is not empty)\r",
							"pm.test(\"First contact has required fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    if (jsonData.length > 0) {\r",
							"        const contact = jsonData[0];\r",
							"        pm.expect(contact).to.have.property(\"firstName\");\r",
							"        pm.expect(contact).to.have.property(\"lastName\");\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contact List-fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the status code is 401\r",
							"pm.test(\"Status code is 401 for unauthorized request\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "LogoutTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/logout",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddContact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate status code is 201\r",
							"pm.test(\"Status code is 201 for successful contact addition\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// Validate that the response contains the contact details\r",
							"pm.test(\"Response contains the added contact details\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"firstName\", \"New\");\r",
							"    pm.expect(jsonData).to.have.property(\"lastName\", \"Contact\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"New\",\r\n  \"lastName\": \"Contact\",\r\n  \"email\": \"new.contact@gmail.com\",\r\n  \"phone\": \"1234567890\",\r\n  \"streetAddress1\": \"Street1\",\r\n  \"streetAddress2\": \"Street2\",\r\n  \"city\": \"Zenica\",\r\n  \"state\": \"\",\r\n  \"postalCode\": \"72000\",\r\n  \"country\": \"BiH\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddContact-fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate status code is 400 for invalid data\r",
							"pm.test(\"Status code is 400 for invalid contact data\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"// Validate the response contains the expected error message for invalid contact data\r",
							"pm.test(\"Response contains the expected error message for invalid contact data\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.errors.firstName.message).to.not.be.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"Contact\",\r\n  \"email\": \"new.contact@gmail.com\",\r\n  \"phone\": \"1234567890\",\r\n  \"streetAddress1\": \"Street1\",\r\n  \"streetAddress2\": \"Street2\",\r\n  \"city\": \"Zenica\",\r\n  \"state\": \"\",\r\n  \"postalCode\": \"72000\",\r\n  \"country\": \"BiH\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		}
	]
}